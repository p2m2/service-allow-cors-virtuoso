#
# ofilangi
#
#  DOCKER_CONTEXT is a context global env variable for all application github p2m2 organization
#   - DOCKER_USER          -> login
#   - DOCKER_PASS          -> password
#   - ORGANIZATION_NAME    -> organization register on dockerhub
#
version: 2.1
workflows:
  docker-publication-workflow:
    jobs:
      - build:
          context:
            - DOCKER_CONTEXT
          filters:
            tags:
              only: main master develop /^v.*/
            branches:
              ignore: /.*/
      - latest:
          context:
            - DOCKER_CONTEXT
          requires:
            - build
          filters:
            tags:
              # only tag release version "v"*** are tag latest
              only: /^v.*/
            branches:
              # nothing coming from branch are deployed as latest
              ignore: /.*/
executors:
  docker-publisher:
    docker:
      - image: circleci/buildpack-deps:stretch
        auth:
          username: ${DOCKER_USER}
          password: ${DOCKER_PASS}

jobs:
  build:
    executor: docker-publisher
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Publish Docker Image to Docker Hub
          # publication of <application>:<application_branch>
          command: |
             IMAGE_NAME=${CIRCLE_PROJECT_REPONAME}:${CIRCLE_BRANCH}

             docker build -t ${ORGANIZATION_NAME}/${IMAGE_NAME} .
             echo ${DOCKER_PASS} | docker login -u ${DOCKER_USER} --password-stdin
             docker push ${ORGANIZATION_NAME}/${IMAGE_NAME}
  latest:
    executor: docker-publisher
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Publish Docker "Latest" tag
          # publication of <application>:latest
          command: |
             IMAGE_NAME=${CIRCLE_PROJECT_REPONAME}:latest

             docker build -t ${ORGANIZATION_NAME}/${IMAGE_NAME} .
             echo ${DOCKER_PASS} | docker login -u ${DOCKER_USER} --password-stdin
             docker push ${ORGANIZATION_NAME}/${IMAGE_NAME}
